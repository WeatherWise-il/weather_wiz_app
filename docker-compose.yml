services:

  front_end:
    build:  ./frontend/
    container_name: frontend
    restart: always
    ports:
      - 80:80
    depends_on:
      - flask_app

  flask_app:
    build: ./backend/
    container_name: flask_app
    secrets:
      - app_api_key
    ports:
      - "5100:5100"
    depends_on:
      mysql_db:
        condition: service_healthy

  mysql_db:
    build: ./db/
    container_name: mysql_db
    restart: always
    ports:
      - "3306:3306"

<<<<<<< Updated upstream
=======
  prometheus:
    image: prom/prometheus:v2.51.2
#    container_name: prometheus
    ports:
      - "9091:9090"
    restart: always
    volumes:
      - ./monitoring/promethues/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - mysql-exporter

  mysql-exporter:
    image: prom/mysqld-exporter:v0.15.1
    container_name: mysql-exporter
    volumes:
      - ./monitoring/promethues/mysql_exporter/.my.cnf:/cnf/.my.cnf
    command:
      - '--config.my-cnf=/cnf/.my.cnf'
    restart: unless-stopped
    depends_on:
      - mysql_db
    ports:
      - 9104:9104

  nginx-prometheus-exporter:
    image: nginx/nginx-prometheus-exporter:1.1.0
    ports:
      - 9113:9113
    command: --nginx.scrape-uri=http://frontend:80/status
    depends_on:
      - front_end

  grafana:
    image: grafana/grafana:11.0.0
    container_name: grafana
    ports:
      - 3000:3000
    volumes:
      - ./monitoring/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
>>>>>>> Stashed changes
secrets:
   app_api_key:
    file: app_api_secret.txt